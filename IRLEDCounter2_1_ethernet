#include <Ethernet.h>
#include <SPI.h>
#include <SoftwareSerial.h>

////////////////////////////////////////////////////////////////////////
//CONFIGURE ETHERNET
////////////////////////////////////////////////////////////////////////
    //byte server[] = { 192, 168, 0, 20 }; //ip Address of the server you will connect to
    byte server[] = { 88, 198, 156, 56 }; //fixed IP of the meetmee.javaprovider.net
    
    
  //byte mac[] = { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED }; //uncomment if hard-coded MAC address is wanted
    byte mac[] = { 0, 0, 0, 0, 0, 0}; //MAC address will be randomly generated at setup
    
    
    EthernetClient client;
    char inString[32]; // string for incoming serial data
    int stringPos = 0; // string index counter
    boolean startRead = false; // is reading?


////////////////////////////////////////////////////////////////////////
//MAKE USE OF HTTP ADDRESS
////////////////////////////////////////////////////////////////////////


String connectAndRead(String url){
  //connect to the server
  
  Serial.println("connecting...");

  //port 80 is typical of a www page
  if (client.connect(server, 80)) {
    Serial.println("connected");
    client.print("GET ");
    client.println(url);
    client.println();

    buzz(speakerPin, 1000, 200);
    blinkPin(greenpin, 500); //flash green LED to confirm successful connection
    return readPage(); //go and read the output

  }else{
    buzz(speakerPin, 500, 200);
    blinkPin(redpin, 500); //flash red LED to indicate that connection failed
    return "connection failed";
  }

////////////////////////////////////////////////////////////////////////
//GENERATE HTTP ADDRESS
////////////////////////////////////////////////////////////////////////

              rfid.toUpperCase();
              Serial.println("RFID: " + rfid);
              String url_base = "/php/RFIDCheckinSystem/API/checkin_submit_manual.php?";
              
              String url_param1 = "im_type=" + String(im_type);
              String url_param2 = "&thirdpartyid=" + rfid;
              String url_param3 = "&sublocation=" + String(sublocation);
              String url_httptail = " HTTP/1.0";
              
              String url_complete = url_base + url_param1 + url_param2 + url_param3 + url_httptail;
              Serial.println("url: " + url_complete);


////////////////////////////////////////////////////////////////////////
//COUNTER SOFTWARE
////////////////////////////////////////////////////////////////////////

 /*if LSD is triggered
   wait until other LSD has been triggered
   if first LSD untriggered: do nothing
   wait until first LSD has been untriggered
   increment population in building
   
   if second LSD untriggered then fall back a step
   
   It will return 1 when nothing is in the way
   
   Walking in pattern Walking out pattern
   Inner | Outter Inner | Outter
   0-> 1 | 1 0-> 1 | 1
   1-> 1 | 0 1-> 0 | 1
   2-> 0 | 0 2-> 0 | 0
   3-> 0 | 1 3-> 1 | 0
   4-> 1 | 1 4-> 1 | 1
   
   */

  if(update.checkIn() && !update.checkOut() && (Status == 0)){
    while(((update.checkIn() && !update.checkOut()) || (!update.checkIn() && !update.checkOut())) && (Status == 0)){
      digitalWrite(13, HIGH);
      Serial.println("1i");
      while(((!update.checkIn() && !update.checkOut()) || (!update.checkIn() && update.checkOut())) && (Status == 0)){
        Serial.println("2i");
        while(((!update.checkIn() && update.checkOut()) || (update.checkIn() && update.checkOut())) && (Status == 0)){
          Serial.println("3i");
          if((update.checkIn() && update.checkOut()) || (Status == 0)){
            Status = 1;
            EdgePop ++;
            PopIn ++;
          }
        }
      }
    }
  }

  else if(!update.checkIn() && update.checkOut() && (Status == 0)){
    while(((!update.checkIn() && update.checkOut()) || (!update.checkIn() && !update.checkOut())) && (Status == 0)){
      digitalWrite(13, HIGH);
      Serial.println("1o");
      while(((!update.checkIn() && !update.checkOut()) || (update.checkIn() && !update.checkOut())) && (Status == 0)){
        Serial.println("2o");
        while(((update.checkIn() && !update.checkOut()) || (update.checkIn() && update.checkOut())) && (Status == 0)){
          Serial.println("3o");
          if((update.checkIn() && update.checkOut()) || (Status == 0)){
            Status = 1;
            if(EdgePop < 1){
              PopOutErr ++;
            }
            else{
              EdgePop --;
              PopOut ++;
            }
          }
        }
      }
    }
  }
  if(Status == 1){
    Serial.println("Edge population; ");
    Serial.println(EdgePop);
  }

  digitalWrite(13, LOW);
  Status = 0;
  delay(50);
